version: 0.2

phases:
  install:
    runtime-versions:
      docker: 19
  pre_build:
    commands:
      - docker -v
      - docker-compose -v
      - groups
      - echo Logging in to Amazon ECR...
      - $(aws ecr get-login --no-include-email --region $AWS_DEFAULT_REGION)
      - docker pull 391634500132.dkr.ecr.eu-central-1.amazonaws.com/laravel_8:latest
      - printenv | sed 's/=\(.*\)/="\1"/' > .env
      - echo "APP_ENV=local" >> .env
      # Copy latest team-version branch source code to master container
      - aws s3 cp s3://s3-cheqsite-test-bucket/team-version/source-code.zip .
      - docker-compose up -d
  build:
    commands:
      - docker ps -a
      - docker container ls
      - docker inspect -f '{{range.NetworkSettings.Networks}}{{.IPAddress}}{{end}}' docker-compose_web_1
      - docker inspect -f '{{range.NetworkSettings.Networks}}{{.IPAddress}}{{end}}' docker-compose_mysql_1
      - docker inspect -f '{{range.NetworkSettings.Networks}}{{.IPAddress}}{{end}}' docker-compose_couchbase_1
      - docker exec docker-compose_web_1 pwd
      - docker exec docker-compose_web_1 ls -la /var/www/html
      - docker exec docker-compose_web_1 cat .env
      - docker exec docker-compose_web_1 unzip -q -o source-code.zip
      - docker exec docker-compose_web_1 composer install
      - docker exec docker-compose_web_1 npm install
      - docker exec docker-compose_web_1 php artisan key:generate
      - docker exec docker-compose_web_1 php artisan migrate:fresh
      - docker exec docker-compose_web_1 php artisan db:seed
      - docker exec docker-compose_web_1 php artisan db:seed --class=OauthClientsTableSeeder
      - docker exec docker-compose_web_1 php artisan db:seed --class=UsersTableSeeder
      - docker exec docker-compose_web_1 php artisan db:seed --class=DevicesTableSeeder
      - docker exec docker-compose_web_1 php artisan db:seed --class=AppsTableSeeder
      - docker exec docker-compose_web_1 php artisan db:seed --class=LicensesTableSeeder
      - docker exec docker-compose_web_1 php artisan db:seed --class=RolesAndPermissionsSeeder
      - docker exec docker-compose_web_1 php artisan passport:install
      - docker exec docker-compose_web_1 php artisan config:clear
      # Init Couchbase cluster
      - docker exec docker-compose_couchbase_1 chmod +x /usr/local/bin/couchbase-cluster-init.sh
      - docker exec docker-compose_couchbase_1 /usr/local/bin/couchbase-cluster-init.sh -h 127.0.0.1 -u=Administrator -p=password -b=$COUCHBASE_BUCKET -s=$COUCHBASE_DB_USERNAME -a=$COUCHBASE_DB_PASSWORD
      #- docker exec docker-compose_couchbase_1 /opt/couchbase/bin/couchbase-cli cluster-init -c 127.0.0.1:8091 --cluster-username=Administrator --cluster-password=password --cluster-port=8091 --cluster-index-ramsize=256 --cluster-fts-ramsize=512 --cluster-ramsize=2048 --services=data,index,query,fts
      # Create Couchbase bucket
      #- docker exec docker-compose_couchbase_1 /opt/couchbase/bin/couchbase-cli bucket-create -c 127.0.0.1:8091 -u Administrator -p password --wait --bucket=$COUCHBASE_BUCKET --bucket-type=couchbase --bucket-ramsize=256  --bucket-replica=0
      # Create Couchbase user
      #- docker exec docker-compose_couchbase_1 /opt/couchbase/bin/couchbase-cli user-manage -c 127.0.0.1:8091 -u Administrator -p password --set --rbac-username $COUCHBASE_DB_USERNAME --rbac-password $COUCHBASE_DB_PASSWORD --roles bucket_full_access[$COUCHBASE_BUCKET] --auth-domain local
      # Create Couchbase primary and GSI indices
      #- docker exec docker-compose_couchbase_1 /opt/couchbase/bin/cbq -e 127.0.0.1:8093 -u Administrator -p password --script "CREATE PRIMARY INDEX ON \`"$COUCHBASE_BUCKET"\` USING GSI;"
      #- docker exec docker-compose_couchbase_1 /opt/couchbase/bin/cbq -e 127.0.0.1:8093 -u Administrator -p password --script "CREATE INDEX \`def_creator_index\` ON \`"$COUCHBASE_BUCKET"\`(\`creator\`);"
      #- docker exec docker-compose_couchbase_1 /opt/couchbase/bin/cbq -e 127.0.0.1:8093 -u Administrator -p password --script "CREATE INDEX \`def_composite_index\` ON \`"$COUCHBASE_BUCKET"\`(\`eloquent_type\`,\`team_id\`,\`deleted_at\`);"
      #- docker exec docker-compose_couchbase_1 /opt/couchbase/bin/cbq -e 127.0.0.1:8093 -u Administrator -p password --script "CREATE INDEX \`def_deleted_at_index\` ON \`"$COUCHBASE_BUCKET"\`(\`deleted_at\`);"
      #- docker exec docker-compose_couchbase_1 /opt/couchbase/bin/cbq -e 127.0.0.1:8093 -u Administrator -p password --script "CREATE INDEX \`def_inspection_id_index\` ON \`"$COUCHBASE_BUCKET"\`(\`inspection_id\`);"
      #- docker exec docker-compose_couchbase_1 /opt/couchbase/bin/cbq -e 127.0.0.1:8093 -u Administrator -p password --script "CREATE INDEX \`def_team_id_index\` ON \`"$COUCHBASE_BUCKET"\`(\`team_id\`);"
      #- docker exec docker-compose_couchbase_1 /opt/couchbase/bin/cbq -e 127.0.0.1:8093 -u Administrator -p password --script "CREATE INDEX \`def_document_type_index\` ON \`"$COUCHBASE_BUCKET"\`(\`document_type\`);"
      #- docker exec docker-compose_couchbase_1 /opt/couchbase/bin/cbq -e 127.0.0.1:8093 -u Administrator -p password --script "CREATE INDEX \`def_eloquent_type_index\` ON \`"$COUCHBASE_BUCKET"\`(\`eloquent_type\`);"
      #- docker exec docker-compose_couchbase_1 /opt/couchbase/bin/cbq -e 127.0.0.1:8093 -u Administrator -p password --script "CREATE INDEX \`def_type_index\` ON \`"$COUCHBASE_BUCKET"\`(\`type\`);"
      #- docker exec docker-compose_couchbase_1 /opt/couchbase/bin/cbq -e 127.0.0.1:8093 -u Administrator -p password --script "CREATE INDEX \`def_city_index\` ON \`"$COUCHBASE_BUCKET"\`(\`city\`);"
      #- docker exec docker-compose_couchbase_1 /opt/couchbase/bin/cbq -e 127.0.0.1:8093 -u Administrator -p password --script "CREATE INDEX \`def_inspection_signature_index\` ON \`"$COUCHBASE_BUCKET"\`(\`signature_inspector\`,\`signature_customer\`) WHERE (\`eloquent_type\` = \"inspections\");"
      #- docker exec docker-compose_couchbase_1 /opt/couchbase/bin/cbq -e 127.0.0.1:8093 -u Administrator -p password --script "CREATE INDEX \`def_inventory_item_id_index\` ON \`"$COUCHBASE_BUCKET"\`(\`inventory_item_id\`);"
      # Run PHPUnit tests
      - docker exec docker-compose_web_1 ./vendor/phpunit/phpunit/phpunit tests --debug
      # Run Frontend Vue.js tests
      - docker exec docker-compose_web_1 npm test
      - docker exec docker-compose_web_1 php artisan db:seed --class=TeamsDummyDataSeeder
      - docker exec docker-compose_web_1 php artisan db:seed --class=StoragePlanSeeder
      - docker exec docker-compose_web_1 php artisan db:seed --class=InspectionUsageServicePlanSeeder

      - echo "test build"
cache:
  paths:
    - '/root/.m2/**/*'
    - '/root/.npm/**/*'
    - '/root/node_modules/**/*'
    - '/root/vendor/**/*'
